{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "pats app test",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "\"\"\"\nmalwaredomainlist app 1.0.8 Self-contained test playbook script\ntest coverage: Y means yes N means no M- executed but not really tested at the datapath level \n\nY - domain reputation - Query for domain reputation\nY - ip reputation - Query for IP reputation\nN - test connectivity - This action runs a quick query on the server to check the connection and credentials\n\n\"\"\"\n#\n# \n# \n\nimport random\nimport numbers\nimport os, inspect, threading\n\nfrom bs4 import BeautifulSoup\nimport requests\nimport re\n\n# ========== Update the next constants per requirement ==============\nversion = '1.0c'\nexpected_pass_count = 1  # how many pass counts we want this test to pass\n\n# Begining of Global block\nkeyfile = os.path.basename(__file__)[1:-1]\npadlock = threading.Lock()\n\n\n# Helper functions, should not require modification, just copy and paste in every test playbook\ndef _save_data(qa_pass_count=0, qa_fail_count=0, qa_overall_result=\"Fail\", message=\"\", init=False, offset=0):\n    if init:\n        if message == \"\":\n            message = 'At on_start'\n        qa_overall_result = {'qa_pass_count': 0, 'qa_fail_count': 0, 'overall_result': 'Fail', 'message': message}\n        phantom.save_data(qa_overall_result, key=keyfile)\n\n    else:\n        with padlock:\n            qa_overall_result = phantom.get_data(key=keyfile, clear_data=False)\n            if len(message) > 0:\n                message = \"{}():{}> {}\".format(inspect.stack()[1 + offset][3], inspect.stack()[1 + offset][2], message)\n                phantom.debug(message)\n                qa_overall_result['message'] += \"\\n\" + message\n            qa_overall_result['qa_pass_count'] += qa_pass_count\n            qa_overall_result['qa_fail_count'] += qa_fail_count\n            phantom.save_data(qa_overall_result, key=keyfile)\n\n\ndef _check_value(l_value, data_path, results, action):\n    # get the action Name\n    action_name = action['action']\n\n    # Get the leaf node, this is the value that we are checking of\n    leaf_node = data_path.split('.')[-1]\n\n    # get the value in the results\n    r_value = phantom.collect(results, data_path)\n\n    # Init the values as if the comparison failed\n    qa_pass_count = 0\n    qa_fail_count = 1\n    test_result = \"Fail\"\n    expected_message = 'expecting \"{0}\"'.format(l_value)\n\n    # Compare\n    if (str(l_value) in str(r_value)):\n        # Passed, set the vars accordingly\n        qa_pass_count = 1\n        qa_fail_count = 0\n        test_result = \"Pass\"\n        expected_message = 'as expected'\n\n    # Now call save_data with what was detected\n    _save_data(qa_fail_count=qa_fail_count,\n               qa_pass_count=qa_pass_count,\n               message='{result}: action \"{action_name}\" {leaf_node} is \"{r_value}\", {expected_message}'.format(\n                   result=test_result,\n                   action_name=action_name,\n                   leaf_node=leaf_node,\n                   r_value=r_value,\n                   expected_message=expected_message),\n               offset=1)\n\n    return True\n\n\n# End - Global Code block\n##############################",
            "description": "",
            "hash": "f3a5c8a37a24fb492640708d6d63e9598e72fb55",
            "joint": {
                "cells": [
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bae8e518-96ad-4b64-bf40-4dc31578db5f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2ba6c4c9-2fe8-4976-91f9-db5b4b079c87",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1807fd89-2216-4e18-ba7f-cd3afbfeb7a8",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 8
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9680a18e-b4b4-41fd-a3cd-8974ebdcacf4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1807fd89-2216-4e18-ba7f-cd3afbfeb7a8",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6bb8e4ff-254b-4d59-a952-9b19f5feabee",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 10
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "70ceb195-ccf8-436d-9197-9fecde8b808c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6bb8e4ff-254b-4d59-a952-9b19f5feabee",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1d01b098-6dc9-43f1-90ef-01141dc9a603",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 12
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.code image": {
                                "xlink:href": "/inc/coa/img/block_icon_code_on.svg"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all detals of actions \n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "whois ip 1, whois ip 2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all detals of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n    # for action_result in summary_json['result']:\n    # if 'action_run_id' in action_result:\n    # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n    # phantom.debug(action_results)\n\n    qa_overall_result = phantom.get_data(key=keyfile, clear_data=False)\n    qa_overall_result['message'] = qa_overall_result['message'] + '\\n\\n' + summary\n    #\n\n    #\n    if qa_overall_result['qa_fail_count'] == 0:\n        if expected_pass_count == qa_overall_result['qa_pass_count']:\n            qa_overall_result['overall_result'] = 'Pass'  # set final pass/fail result in on_finish\n    phantom.debug(\n        'Overall Qa result: {} - Pass: {} - Fail: {} \\nMessage: {}'.format(qa_overall_result['overall_result'],\n                                                                           qa_overall_result['qa_pass_count'],\n                                                                           qa_overall_result['qa_fail_count'],\n                                                                           qa_overall_result['message'], ))\n    phantom.save_data(qa_overall_result, key=keyfile)\n\n    return",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1d01b098-6dc9-43f1-90ef-01141dc9a603",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 314,
                        "line_start": 286,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1920,
                            "y": 180
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 20
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e4d1874e-8b0f-4a0d-ac3c-3595c5e4ff1c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e3c62be5-2589-41a2-864f-af687351c28e",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d15a8adc-2603-4942-b20a-b7c5f55357b2",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 46
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "88fcf28a-c5fd-46ed-b827-7ebaa18983f8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d15a8adc-2603-4942-b20a-b7c5f55357b2",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7ea2152f-f006-4679-8295-ca97dea72d30",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 130
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "70288c3b-a6b0-4f40-8b91-64cf9553c6fb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7ea2152f-f006-4679-8295-ca97dea72d30",
                            "port": "out-2",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "81f9b50b-1f0c-4bd4-b8ba-9173f5f413d1",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 135
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "de8be391-87aa-4ac7-982c-13399d5982fd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "81f9b50b-1f0c-4bd4-b8ba-9173f5f413d1",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "64964e1c-d721-4bb8-80b7-281b93cefed1",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 137
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2e8117f8-5a5b-4ba4-9837-3064279d381c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7ea2152f-f006-4679-8295-ca97dea72d30",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2ba6c4c9-2fe8-4976-91f9-db5b4b079c87",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 142
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8f43608c-c5ac-4179-9d15-3900a925adb9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "64964e1c-d721-4bb8-80b7-281b93cefed1",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1d01b098-6dc9-43f1-90ef-01141dc9a603",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 148
                    },
                    {
                        "action": "domain reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "domain": "ip_reputation_1:action_result.data.*.Domain",
                            "include_inactive": "True"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "",
                                "app_version": "",
                                "config_type": "asset",
                                "fields": {
                                    "domain": "ip_reputation_1:action_result.data.*.Domain",
                                    "include_inactive": "True"
                                },
                                "has_app": true,
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "malwaredomainlist",
                                "output": [
                                    {
                                        "column_name": "Domain",
                                        "column_order": 0,
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.Domain",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Path",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.Path",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Description",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.Description",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 2,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.IP",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "ASN",
                                        "column_order": 7,
                                        "data_path": "action_result.data.*.ASN",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Reverse Lookup",
                                        "column_order": 4,
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.ReverseLookup",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Date (UTC)",
                                        "column_order": 8,
                                        "data_path": "action_result.data.*.DateUTC",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Registrant",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.Registrant",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.Country",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.CountryCode",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "domain",
                                            "url"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.include_inactive",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.matching_records",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "",
                                "product_vendor": "",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "domain reputation"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def domain_reputation_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('domain_reputation_1() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'domain_reputation_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['ip_reputation_1:action_result.data.*.Domain', 'ip_reputation_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'domain_reputation_1' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'domain': results_item_1[0],\n                'include_inactive': True,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(\"domain reputation\", parameters=parameters, assets=['malwaredomainlist'], callback=whois_ip_1, name=\"domain_reputation_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#654796",
                        "connected_to_start": true,
                        "connection_name": "ip reputation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2ba6c4c9-2fe8-4976-91f9-db5b4b079c87",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 160,
                        "line_start": 136,
                        "message": "Configuring now",
                        "name": "domain reputation",
                        "notes": "",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 800,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "domain_reputation_1",
                        "required_params": {
                            "domain": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 175
                    },
                    {
                        "action": "whois ip",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "domain_reputation_1:action_result.data.*.IP"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "",
                                "app_version": "",
                                "config_type": "asset",
                                "fields": {
                                    "ip": "domain_reputation_1:action_result.data.*.IP"
                                },
                                "has_app": true,
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "whois",
                                "output": [
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn Cidr",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.asn_cidr",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn Country Code",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.asn_country_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn Date",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.asn_date",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn Registry",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.asn_registry",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Abuse Emails",
                                        "column_order": 7,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.nets.*.abuse_emails",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Address",
                                        "column_order": 8,
                                        "data_path": "action_result.data.*.nets.*.address",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Cidr",
                                        "column_order": 9,
                                        "data_path": "action_result.data.*.nets.*.cidr",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "City",
                                        "column_order": 10,
                                        "data_path": "action_result.data.*.nets.*.city",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 11,
                                        "data_path": "action_result.data.*.nets.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Created",
                                        "column_order": 12,
                                        "data_path": "action_result.data.*.nets.*.created",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Description",
                                        "column_order": 13,
                                        "data_path": "action_result.data.*.nets.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_order": 7,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.nets.*.emails",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.nets.*.handle",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Name",
                                        "column_order": 14,
                                        "data_path": "action_result.data.*.nets.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Postal Code",
                                        "column_order": 15,
                                        "data_path": "action_result.data.*.nets.*.postal_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Range",
                                        "column_order": 16,
                                        "data_path": "action_result.data.*.nets.*.range",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "State",
                                        "column_order": 17,
                                        "data_path": "action_result.data.*.nets.*.state",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Tech Emails",
                                        "column_order": 18,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.nets.*.tech_emails",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Updated",
                                        "column_order": 19,
                                        "data_path": "action_result.data.*.nets.*.updated",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.query",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Misc Emails",
                                        "column_order": 20,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.nets.*.misc_emails",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.country_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.nets.*.address",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.nets.*.range",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.registry",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "",
                                "product_vendor": "",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "whois ip 1"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def whois_ip_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('whois_ip_1() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'whois_ip_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['domain_reputation_1:action_result.data.*.IP', 'domain_reputation_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'whois_ip_1' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'ip': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(\"whois ip\", parameters=parameters, assets=['whois'], callback=decision_1, name=\"whois_ip_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#654796",
                        "connected_to_start": true,
                        "connection_name": "domain reputation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1807fd89-2216-4e18-ba7f-cd3afbfeb7a8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 183,
                        "line_start": 160,
                        "message": "Configuring now",
                        "name": "whois ip",
                        "notes": "",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1140,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "whois_ip_1",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 176
                    },
                    {
                        "action": "whois ip",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "ip_reputation_1:action_result.data.*.IP"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "",
                                "app_version": "",
                                "config_type": "asset",
                                "fields": {
                                    "ip": "ip_reputation_1:action_result.data.*.IP"
                                },
                                "has_app": true,
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "whois",
                                "output": [
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn Cidr",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.asn_cidr",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn Country Code",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.asn_country_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn Date",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.asn_date",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn Registry",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.asn_registry",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Abuse Emails",
                                        "column_order": 7,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.nets.*.abuse_emails",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Address",
                                        "column_order": 8,
                                        "data_path": "action_result.data.*.nets.*.address",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Cidr",
                                        "column_order": 9,
                                        "data_path": "action_result.data.*.nets.*.cidr",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "City",
                                        "column_order": 10,
                                        "data_path": "action_result.data.*.nets.*.city",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 11,
                                        "data_path": "action_result.data.*.nets.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Created",
                                        "column_order": 12,
                                        "data_path": "action_result.data.*.nets.*.created",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Description",
                                        "column_order": 13,
                                        "data_path": "action_result.data.*.nets.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_order": 7,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.nets.*.emails",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.nets.*.handle",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Name",
                                        "column_order": 14,
                                        "data_path": "action_result.data.*.nets.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Postal Code",
                                        "column_order": 15,
                                        "data_path": "action_result.data.*.nets.*.postal_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Range",
                                        "column_order": 16,
                                        "data_path": "action_result.data.*.nets.*.range",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "State",
                                        "column_order": 17,
                                        "data_path": "action_result.data.*.nets.*.state",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Tech Emails",
                                        "column_order": 18,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.nets.*.tech_emails",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Updated",
                                        "column_order": 19,
                                        "data_path": "action_result.data.*.nets.*.updated",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.query",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Misc Emails",
                                        "column_order": 20,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.nets.*.misc_emails",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.country_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.nets.*.address",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.nets.*.range",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.registry",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "",
                                "product_vendor": "",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "whois ip 2"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def whois_ip_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('whois_ip_2() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'whois_ip_2' call\n    results_data_1 = phantom.collect2(container=container, datapath=['ip_reputation_1:action_result.data.*.IP', 'ip_reputation_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'whois_ip_2' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'ip': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(\"whois ip\", parameters=parameters, assets=['whois'], callback=decision_3, name=\"whois_ip_2\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#654796",
                        "connected_to_start": true,
                        "connection_name": "ip reputation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "81f9b50b-1f0c-4bd4-b8ba-9173f5f413d1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 206,
                        "line_start": 183,
                        "message": "Configuring now",
                        "name": "whois ip",
                        "notes": "",
                        "number": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1140,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "whois_ip_2",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 177
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('decision_1() called')\n\n    # check for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"whois_ip_1:action_result.data.*.nets.*.country\", \"==\", \"whois_ip_1:action_result.data.*.nets.*.country\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched_artifacts_1 or matched_results_1:\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "whois ip 1",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "def decision_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('decision_1() called')\n\n    # check for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"whois_ip_1:action_result.data.*.nets.*.country\", \"==\", \"whois_ip_1:action_result.data.*.nets.*.country\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched_artifacts_1 or matched_results_1:\n        # The following routine is manually added to count the qa pass/fail count.  All others are created from COA\n        _check_value('success', \"action_result.status\", results, action)\n        \n        return\n\n    return",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6bb8e4ff-254b-4d59-a952-9b19f5feabee",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 226,
                        "line_start": 206,
                        "name": "decision",
                        "notes": "",
                        "number": 1,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "whois_ip_1:action_result.data.*.nets.*.country",
                                        "value": "whois_ip_1:action_result.data.*.nets.*.country"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1440,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "decision_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": false,
                        "z": 181
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('decision_3() called')\n\n    # check for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"whois_ip_2:action_result.data.*.nets.*.country\", \"==\", \"whois_ip_2:action_result.data.*.nets.*.country\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched_artifacts_1 or matched_results_1:\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "whois ip 2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "def decision_3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('decision_3() called')\n\n    # check for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"whois_ip_2:action_result.data.*.nets.*.country\", \"==\", \"whois_ip_2:action_result.data.*.nets.*.country\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched_artifacts_1 or matched_results_1:\n        # The following routine is manually added to count the qa pass/fail count.  All others are created from COA\n        _check_value('success', \"action_result.status\", results, action)\n        \n        return\n\n    return",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "64964e1c-d721-4bb8-80b7-281b93cefed1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 246,
                        "line_start": 226,
                        "name": "decision",
                        "notes": "",
                        "number": 3,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "whois_ip_2:action_result.data.*.nets.*.country",
                                        "value": "whois_ip_2:action_result.data.*.nets.*.country"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1440,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "decision_3",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": false,
                        "z": 182
                    },
                    {
                        "action": "ip reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "include_inactive": "True",
                            "ip": "188.225.32.177"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "",
                                "app_version": "",
                                "config_type": "asset",
                                "fields": {
                                    "include_inactive": "True",
                                    "ip": "188.225.32.177"
                                },
                                "has_app": true,
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "malwaredomainlist",
                                "output": [
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.Domain",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Description",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.IP",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.ASN",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.ReverseLookup",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.DateUTC",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Registrant",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Country",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.CountryCode",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.include_inactive",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.matching_records",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "",
                                "product_vendor": "",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "ip reputation"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.code image": {
                                "xlink:href": "/inc/coa/img/block_icon_code_on.svg"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def ip_reputation_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('ip_reputation_1() called')\n\n    # collect data for 'ip_reputation_1' call\n\n    parameters = []\n    \n    # build parameters list for 'ip_reputation_1' call\n    parameters.append({\n        'ip': \"188.225.32.177\",\n        'include_inactive': True,\n    })\n\n    phantom.act(\"ip reputation\", parameters=parameters, assets=['malwaredomainlist'], callback=domain_reputation_1, name=\"ip_reputation_1\")    \n    \n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#654796",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "def ip_reputation_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('ip_reputation_1() called')\n\n    # collect data for 'ip_reputation_1' call\n\n    parameters = []\n    \n    # build parameters list for 'ip_reputation_1' call\n    parameters.append({\n        #'ip': \"188.225.32.177\",\n        'ip': bad_ip_address, \n        'include_inactive': True,\n    })\n\n    phantom.act(\"ip reputation\", parameters=parameters, assets=['malwaredomainlist'], callback=decision_2, name=\"ip_reputation_1\")    \n    \n    return",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d15a8adc-2603-4942-b20a-b7c5f55357b2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 264,
                        "line_start": 246,
                        "message": "Configuring now",
                        "name": "ip reputation",
                        "notes": "",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 340,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "ip_reputation_1",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 184
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('decision_2() called')\n\n    # check for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"ip_reputation_1:action_result.data.*.Domain\", \"!=\", \"\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched_artifacts_1 or matched_results_1:\n        domain_reputation_1(action=action, success=success, container=container, results=results, handle=handle)\n        return\n\n    # call connected blocks for 'else' condition 2\n    whois_ip_2(action=action, success=success, container=container, results=results, handle=handle)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "ip reputation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "def decision_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('decision_2() called')\n\n    # check for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"ip_reputation_1:action_result.data.*.Domain\", \"!=\", \"\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched_artifacts_1 or matched_results_1:\n                \n        domain_reputation_1(action=action, success=success, container=container, results=results, handle=handle)\n        return\n\n           \n    # call connected blocks for 'else' condition 2\n    whois_ip_2(action=action, success=success, container=container, results=results, handle=handle)\n\n    return",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7ea2152f-f006-4679-8295-ca97dea72d30",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 286,
                        "line_start": 264,
                        "name": "decision",
                        "notes": "",
                        "number": 2,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "ip_reputation_1:action_result.data.*.Domain",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 620,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "decision_2",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": false,
                        "z": 185
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "text": "START"
                            },
                            "g.code image": {
                                "xlink:href": "/inc/coa/img/block_icon_code_on.svg"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'get_data_1' block\n    get_data_1(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "def on_start(container):\n    global bad_ip_address \n    \n    phantom.debug('on_start() called')\n    _save_data(init=True)\n\n    while True:\n        # Extract a sample IP address from random ip domain\n        network_range = '.' + str(random.randint(1,254)) \n                                         \n        try:\n            # Extract only 1 IP address and remove all other text\n            r  = requests.get(\"http://www.malwaredomainlist.com/mdl.php?search=\"+ network_range + \"&colsearch=All&quantity=10\")\n            data = r.text\n            soup = BeautifulSoup(data)\n            #phantom.debug (\"r.text = {}\\nr = {}\".format(data, r))\n\n            bad_ip_address = soup.body.findAll(text=re.compile(network_range), limit=1)\n            bad_ip_address = bad_ip_address[0]\n            bad_ip_address = re.search(r'\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}', bad_ip_address).group()  \n            phantom.debug(\"Extracted malware IP address from the website: {}\".format(bad_ip_address))\n            break\n        except:\n            phantom.debug(\"Extracted address segment %s does not contain data... Trying a new one\" % network_range)\n            pass\n\n    # call 'ip_reputation_1' block\n    ip_reputation_1(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e3c62be5-2589-41a2-864f-af687351c28e",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 136,
                        "line_start": 105,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 195
                    }
                ]
            },
            "notes": ""
        },
        "schema": 3,
        "version": "3.5.159"
    },
    "create_time": "2018-02-17T01:16:49.073562+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ]
}